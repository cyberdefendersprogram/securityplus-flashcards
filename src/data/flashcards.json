[
  {
    "info": {
      "id": "DF7guZAB5GBLkjBFtnCN4",
      "title": "Network Applications",
      "section": "5.10",
      "date": "12-30-20"
    },
    "cards": [
      {
        "deckId": "DF7guZAB5GBLkjBFtnCN4",
        "id": "UVT_1RzbqyZAqQAQkrsS7",
        "term": "Peer-To-Peer (P2P) Networking",
        "definition": "P2P software allows users to share files without the need of a central server. Connections are made on the fly from one user to another. P2P software usually comes in the form as a torrent client such as *BitTorrent* or *uTorrent*.\n"
      },
      {
        "deckId": "DF7guZAB5GBLkjBFtnCN4",
        "id": "qKZkWLeRo-W8ML5uhGv13",
        "term": "P2P Security Considerations",
        "definition": "P2P software allows users to share files without the need of a central server. Connections are made on the fly from one user to another. P2P software usually comes in the form as a torrent client such as *BitTorrent* or *uTorrent*.\n*   Malware\n\n    *   Files from other users could contain malware\n\n*   Bandwidth Hogging\n    *   Without proper limits P2P can use a lot of upload/download bandwidth\n\n*   Knowlingly or Unknowling sharing confidential files\n    *   Files accessible from other users might be posted illegally\n"
      },
      {
        "deckId": "DF7guZAB5GBLkjBFtnCN4",
        "id": "_zNTOeDcbfuX1hYZJxAfJ",
        "term": "P2P Security Steps",
        "definition": "P2P software allows users to share files without the need of a central server. Connections are made on the fly from one user to another. P2P software usually comes in the form as a torrent client such as *BitTorrent* or *uTorrent*.\n*   Malware\n\n    *   Files from other users could contain malware\n\n*   Bandwidth Hogging\n    *   Without proper limits P2P can use a lot of upload/download bandwidth\n\n*   Knowlingly or Unknowling sharing confidential files\n    *   Files accessible from other users might be posted illegally\n| Security Step                     | Explanation                                                                                                                                                                     |\n| --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Block P2P Ports                   | One option is to block the port the P2P software is using. This is not always effective since P2P software can change ports or use dynamic ports.                               |\n| Blacklist P2P Traffic             | Add peer-to-peer traffic to the blacklist of a network content filter. The content filter can do all the work of identifying P2P packets.                                       |\n| Prevent P2P Software Installation | Blocking the installation of P2P software can be an effective measure for company owned devices. However, this does not protect against P2P software being used on the network. |\n"
      },
      {
        "deckId": "DF7guZAB5GBLkjBFtnCN4",
        "id": "PoJt3BBCrKoE9g0ASx79P",
        "term": "Instant Messaging (IM) Applications",
        "definition": "P2P software allows users to share files without the need of a central server. Connections are made on the fly from one user to another. P2P software usually comes in the form as a torrent client such as *BitTorrent* or *uTorrent*.\n*   Malware\n\n    *   Files from other users could contain malware\n\n*   Bandwidth Hogging\n    *   Without proper limits P2P can use a lot of upload/download bandwidth\n\n*   Knowlingly or Unknowling sharing confidential files\n    *   Files accessible from other users might be posted illegally\n| Security Step                     | Explanation                                                                                                                                                                     |\n| --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Block P2P Ports                   | One option is to block the port the P2P software is using. This is not always effective since P2P software can change ports or use dynamic ports.                               |\n| Blacklist P2P Traffic             | Add peer-to-peer traffic to the blacklist of a network content filter. The content filter can do all the work of identifying P2P packets.                                       |\n| Prevent P2P Software Installation | Blocking the installation of P2P software can be an effective measure for company owned devices. However, this does not protect against P2P software being used on the network. |\nInstant Message applications provide text communication and media/document exchange.\n"
      },
      {
        "deckId": "DF7guZAB5GBLkjBFtnCN4",
        "id": "PoJt3BBCrKoE9g0ASx79P",
        "term": "Instant Messaging (IM) Applications",
        "definition": "P2P software allows users to share files without the need of a central server. Connections are made on the fly from one user to another. P2P software usually comes in the form as a torrent client such as *BitTorrent* or *uTorrent*.\n*   Malware\n\n    *   Files from other users could contain malware\n\n*   Bandwidth Hogging\n    *   Without proper limits P2P can use a lot of upload/download bandwidth\n\n*   Knowlingly or Unknowling sharing confidential files\n    *   Files accessible from other users might be posted illegally\n| Security Step                     | Explanation                                                                                                                                                                     |\n| --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Block P2P Ports                   | One option is to block the port the P2P software is using. This is not always effective since P2P software can change ports or use dynamic ports.                               |\n| Blacklist P2P Traffic             | Add peer-to-peer traffic to the blacklist of a network content filter. The content filter can do all the work of identifying P2P packets.                                       |\n| Prevent P2P Software Installation | Blocking the installation of P2P software can be an effective measure for company owned devices. However, this does not protect against P2P software being used on the network. |\nInstant Message applications provide text communication and media/document exchange.\n### Common IM Applications\n*   Google Talk\n*   Skype\n*   iMessage\n*   Facebook Messenger\n*   Internet Relay Chat (IRC)\n*   Slack\n*   Discord\n"
      },
      {
        "deckId": "DF7guZAB5GBLkjBFtnCN4",
        "id": "vi4Iw06oK6iGjZaaBjqyj",
        "term": "IM Application Potential Threats",
        "definition": "P2P software allows users to share files without the need of a central server. Connections are made on the fly from one user to another. P2P software usually comes in the form as a torrent client such as *BitTorrent* or *uTorrent*.\n*   Malware\n\n    *   Files from other users could contain malware\n\n*   Bandwidth Hogging\n    *   Without proper limits P2P can use a lot of upload/download bandwidth\n\n*   Knowlingly or Unknowling sharing confidential files\n    *   Files accessible from other users might be posted illegally\n| Security Step                     | Explanation                                                                                                                                                                     |\n| --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Block P2P Ports                   | One option is to block the port the P2P software is using. This is not always effective since P2P software can change ports or use dynamic ports.                               |\n| Blacklist P2P Traffic             | Add peer-to-peer traffic to the blacklist of a network content filter. The content filter can do all the work of identifying P2P packets.                                       |\n| Prevent P2P Software Installation | Blocking the installation of P2P software can be an effective measure for company owned devices. However, this does not protect against P2P software being used on the network. |\nInstant Message applications provide text communication and media/document exchange.\n### Common IM Applications\n*   Google Talk\n*   Skype\n*   iMessage\n*   Facebook Messenger\n*   Internet Relay Chat (IRC)\n*   Slack\n*   Discord\n*   IM communication could contain malware, viruses, social engineering exploits\n*   An IM can be susceptable to sniffing, capturing and viewing by others\n*   Instant Messaging Spam (SPIM)\n    *   IM systems contain user directories, making it easy to identify spim targets\n    *   IM systems often contain demographic information about users\n    *   Information in contact lists can be remotely accessed\n*   IM clients can provide a lot of information about a user's system and their activity\n*   Client-side scripting allows attackers to send messages on behalf of other IM users and can be used to create social engineering attacks\n"
      },
      {
        "deckId": "DF7guZAB5GBLkjBFtnCN4",
        "id": "fk7xEmnW8-WO0uVjdBXWc",
        "term": "Application Control Software",
        "definition": "P2P software allows users to share files without the need of a central server. Connections are made on the fly from one user to another. P2P software usually comes in the form as a torrent client such as *BitTorrent* or *uTorrent*.\n*   Malware\n\n    *   Files from other users could contain malware\n\n*   Bandwidth Hogging\n    *   Without proper limits P2P can use a lot of upload/download bandwidth\n\n*   Knowlingly or Unknowling sharing confidential files\n    *   Files accessible from other users might be posted illegally\n| Security Step                     | Explanation                                                                                                                                                                     |\n| --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Block P2P Ports                   | One option is to block the port the P2P software is using. This is not always effective since P2P software can change ports or use dynamic ports.                               |\n| Blacklist P2P Traffic             | Add peer-to-peer traffic to the blacklist of a network content filter. The content filter can do all the work of identifying P2P packets.                                       |\n| Prevent P2P Software Installation | Blocking the installation of P2P software can be an effective measure for company owned devices. However, this does not protect against P2P software being used on the network. |\nInstant Message applications provide text communication and media/document exchange.\n### Common IM Applications\n*   Google Talk\n*   Skype\n*   iMessage\n*   Facebook Messenger\n*   Internet Relay Chat (IRC)\n*   Slack\n*   Discord\n*   IM communication could contain malware, viruses, social engineering exploits\n*   An IM can be susceptable to sniffing, capturing and viewing by others\n*   Instant Messaging Spam (SPIM)\n    *   IM systems contain user directories, making it easy to identify spim targets\n    *   IM systems often contain demographic information about users\n    *   Information in contact lists can be remotely accessed\n*   IM clients can provide a lot of information about a user's system and their activity\n*   Client-side scripting allows attackers to send messages on behalf of other IM users and can be used to create social engineering attacks\nApplication controls focus on controlling the applications a user at a workstation can access over a network.\n"
      },
      {
        "deckId": "DF7guZAB5GBLkjBFtnCN4",
        "id": "fk7xEmnW8-WO0uVjdBXWc",
        "term": "Application Control Software",
        "definition": "P2P software allows users to share files without the need of a central server. Connections are made on the fly from one user to another. P2P software usually comes in the form as a torrent client such as *BitTorrent* or *uTorrent*.\n*   Malware\n\n    *   Files from other users could contain malware\n\n*   Bandwidth Hogging\n    *   Without proper limits P2P can use a lot of upload/download bandwidth\n\n*   Knowlingly or Unknowling sharing confidential files\n    *   Files accessible from other users might be posted illegally\n| Security Step                     | Explanation                                                                                                                                                                     |\n| --------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Block P2P Ports                   | One option is to block the port the P2P software is using. This is not always effective since P2P software can change ports or use dynamic ports.                               |\n| Blacklist P2P Traffic             | Add peer-to-peer traffic to the blacklist of a network content filter. The content filter can do all the work of identifying P2P packets.                                       |\n| Prevent P2P Software Installation | Blocking the installation of P2P software can be an effective measure for company owned devices. However, this does not protect against P2P software being used on the network. |\nInstant Message applications provide text communication and media/document exchange.\n### Common IM Applications\n*   Google Talk\n*   Skype\n*   iMessage\n*   Facebook Messenger\n*   Internet Relay Chat (IRC)\n*   Slack\n*   Discord\n*   IM communication could contain malware, viruses, social engineering exploits\n*   An IM can be susceptable to sniffing, capturing and viewing by others\n*   Instant Messaging Spam (SPIM)\n    *   IM systems contain user directories, making it easy to identify spim targets\n    *   IM systems often contain demographic information about users\n    *   Information in contact lists can be remotely accessed\n*   IM clients can provide a lot of information about a user's system and their activity\n*   Client-side scripting allows attackers to send messages on behalf of other IM users and can be used to create social engineering attacks\nApplication controls focus on controlling the applications a user at a workstation can access over a network.\n#### Benefits\nImplementing an application control system can provide additional security to a firewall. The application control system can identify application packets instead of just applying a filter to the network traffic. By identifying the packets this solution can block unauthorized applications. A central application whitelist can be applied to all devices on the network.\n"
      }
    ]
  },
  {
    "info": {
      "id": "6kOlVubRhaovjOvbbvYa6",
      "title": "Hardening Authentication",
      "section": "6.6",
      "date": "02-03-21"
    },
    "cards": [
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "IcMLcj9zsplQRP16M3hCx",
        "term": "Multifactor Authentication",
        "definition": "Using more than one method to authenticate users.\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "BMO6vLb3b91qLo9X7nga1",
        "term": "Smart Cards",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "7zIbSzvnV_OWZkI2G8Ade",
        "term": "Microprobing",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "L6ofcfYVR8gvDhR9eQpb1",
        "term": "Radio frequency identification (RFID)",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "RBiGLbk8G2w8_HPrkwow_",
        "term": "User Education",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "XMGE3lXSKtZs21rKb9EmB",
        "term": "Password Policies",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "hvM_VTco0hDh4UfvCxBcc",
        "term": "Password Aging",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "rbFe_vTf9ilsBqGzjvU_v",
        "term": "Password Complexity Requirements",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n**Goal:** Prevent easy to guess passwords\n**Complexity Requirements:**\n*   Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters\n\n*   Must be at least six characters in length\n\n*   Must contain characters from three of the following four categories:\n\n    *   English uppercase characters (A through Z)\n    *   English lowercase characters (a through z)\n    *   Base-10 digits (0 through 9)\n    *   Non-alphabetic characters (for example, !, $, #, or %)\n\n*   Complexity requirements are enforced when passwords are changed or created.\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "M3jfh82S6gZufVroaMVo9",
        "term": "Multifactor Authentication",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n**Goal:** Prevent easy to guess passwords\n**Complexity Requirements:**\n*   Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters\n\n*   Must be at least six characters in length\n\n*   Must contain characters from three of the following four categories:\n\n    *   English uppercase characters (A through Z)\n    *   English lowercase characters (a through z)\n    *   Base-10 digits (0 through 9)\n    *   Non-alphabetic characters (for example, !, $, #, or %)\n\n*   Complexity requirements are enforced when passwords are changed or created.\nUsing more than one method to authenticate users. End users can be authenticated using four types of factors:\n*   Something you know\n*   Something you have\n*   Something you are\n*   Something you do\nWhen possible multifactor authentication should be used\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "2GjBSYvqM211AqKcqhee4",
        "term": "Account Restrictions",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n**Goal:** Prevent easy to guess passwords\n**Complexity Requirements:**\n*   Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters\n\n*   Must be at least six characters in length\n\n*   Must contain characters from three of the following four categories:\n\n    *   English uppercase characters (A through Z)\n    *   English lowercase characters (a through z)\n    *   Base-10 digits (0 through 9)\n    *   Non-alphabetic characters (for example, !, $, #, or %)\n\n*   Complexity requirements are enforced when passwords are changed or created.\nUsing more than one method to authenticate users. End users can be authenticated using four types of factors:\n*   Something you know\n*   Something you have\n*   Something you are\n*   Something you do\nWhen possible multifactor authentication should be used\nPlaces restrictions on user logins. For example, you can:\n*   Prohibit multiple concurrent logins\n*   Restrict logins to specific day/time\n*   Allow logins only from specific computers\n*   Create expiration dates for user accounts\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "rRbzfEXVKotO1_sJ0dfY_",
        "term": "Account Monitoring",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n**Goal:** Prevent easy to guess passwords\n**Complexity Requirements:**\n*   Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters\n\n*   Must be at least six characters in length\n\n*   Must contain characters from three of the following four categories:\n\n    *   English uppercase characters (A through Z)\n    *   English lowercase characters (a through z)\n    *   Base-10 digits (0 through 9)\n    *   Non-alphabetic characters (for example, !, $, #, or %)\n\n*   Complexity requirements are enforced when passwords are changed or created.\nUsing more than one method to authenticate users. End users can be authenticated using four types of factors:\n*   Something you know\n*   Something you have\n*   Something you are\n*   Something you do\nWhen possible multifactor authentication should be used\nPlaces restrictions on user logins. For example, you can:\n*   Prohibit multiple concurrent logins\n*   Restrict logins to specific day/time\n*   Allow logins only from specific computers\n*   Create expiration dates for user accounts\nAccount monitoring can help you detect unusual or risky behavior. You should monitor for the following:\n*   Login activity.\n*   Suspicious logins for the user (spikes, logins at unusual time of day, and/or frequent or failed logins).\n*   Remote-access traffic.\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "lI-pg0oyrEgkBIyl_JrQb",
        "term": "Account Maintenance",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n**Goal:** Prevent easy to guess passwords\n**Complexity Requirements:**\n*   Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters\n\n*   Must be at least six characters in length\n\n*   Must contain characters from three of the following four categories:\n\n    *   English uppercase characters (A through Z)\n    *   English lowercase characters (a through z)\n    *   Base-10 digits (0 through 9)\n    *   Non-alphabetic characters (for example, !, $, #, or %)\n\n*   Complexity requirements are enforced when passwords are changed or created.\nUsing more than one method to authenticate users. End users can be authenticated using four types of factors:\n*   Something you know\n*   Something you have\n*   Something you are\n*   Something you do\nWhen possible multifactor authentication should be used\nPlaces restrictions on user logins. For example, you can:\n*   Prohibit multiple concurrent logins\n*   Restrict logins to specific day/time\n*   Allow logins only from specific computers\n*   Create expiration dates for user accounts\nAccount monitoring can help you detect unusual or risky behavior. You should monitor for the following:\n*   Login activity.\n*   Suspicious logins for the user (spikes, logins at unusual time of day, and/or frequent or failed logins).\n*   Remote-access traffic.\nThe following list provides best practices for account maintenance:\n*   Delete an employee's account when the employee leaves the organization.\n*   Disable inactive accounts.\n*   Use automatic account expiration when applicable.\n*   Restrict remote access only to authorized clients (filtering by IP address).\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "-YVcWFPJl5uR7dxlHgy3F",
        "term": "Limit Remote Access",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n**Goal:** Prevent easy to guess passwords\n**Complexity Requirements:**\n*   Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters\n\n*   Must be at least six characters in length\n\n*   Must contain characters from three of the following four categories:\n\n    *   English uppercase characters (A through Z)\n    *   English lowercase characters (a through z)\n    *   Base-10 digits (0 through 9)\n    *   Non-alphabetic characters (for example, !, $, #, or %)\n\n*   Complexity requirements are enforced when passwords are changed or created.\nUsing more than one method to authenticate users. End users can be authenticated using four types of factors:\n*   Something you know\n*   Something you have\n*   Something you are\n*   Something you do\nWhen possible multifactor authentication should be used\nPlaces restrictions on user logins. For example, you can:\n*   Prohibit multiple concurrent logins\n*   Restrict logins to specific day/time\n*   Allow logins only from specific computers\n*   Create expiration dates for user accounts\nAccount monitoring can help you detect unusual or risky behavior. You should monitor for the following:\n*   Login activity.\n*   Suspicious logins for the user (spikes, logins at unusual time of day, and/or frequent or failed logins).\n*   Remote-access traffic.\nThe following list provides best practices for account maintenance:\n*   Delete an employee's account when the employee leaves the organization.\n*   Disable inactive accounts.\n*   Use automatic account expiration when applicable.\n*   Restrict remote access only to authorized clients (filtering by IP address).\n*   Limited remote access\n*   Connected through dmz\n*   Restrict IP addresses\n*   Limit concurrent logins\n*   Audit remote logins\nThe following precautions should be taken when administering remote access:\n*   Allow remote access to the network only for those users who need it to perform their duties (not standard for all users).\n*   Do not allow remote access clients to connect directly to the internal network. Allow remote access clients to connect to a DMZ and then monitor the traffic.\n*   Restrict remote access only to authorized clients. You can filter by IP address.\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "fjPdZ3Pu1taADaRPohSoc",
        "term": "Account Policies Lockout",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n**Goal:** Prevent easy to guess passwords\n**Complexity Requirements:**\n*   Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters\n\n*   Must be at least six characters in length\n\n*   Must contain characters from three of the following four categories:\n\n    *   English uppercase characters (A through Z)\n    *   English lowercase characters (a through z)\n    *   Base-10 digits (0 through 9)\n    *   Non-alphabetic characters (for example, !, $, #, or %)\n\n*   Complexity requirements are enforced when passwords are changed or created.\nUsing more than one method to authenticate users. End users can be authenticated using four types of factors:\n*   Something you know\n*   Something you have\n*   Something you are\n*   Something you do\nWhen possible multifactor authentication should be used\nPlaces restrictions on user logins. For example, you can:\n*   Prohibit multiple concurrent logins\n*   Restrict logins to specific day/time\n*   Allow logins only from specific computers\n*   Create expiration dates for user accounts\nAccount monitoring can help you detect unusual or risky behavior. You should monitor for the following:\n*   Login activity.\n*   Suspicious logins for the user (spikes, logins at unusual time of day, and/or frequent or failed logins).\n*   Remote-access traffic.\nThe following list provides best practices for account maintenance:\n*   Delete an employee's account when the employee leaves the organization.\n*   Disable inactive accounts.\n*   Use automatic account expiration when applicable.\n*   Restrict remote access only to authorized clients (filtering by IP address).\n*   Limited remote access\n*   Connected through dmz\n*   Restrict IP addresses\n*   Limit concurrent logins\n*   Audit remote logins\nThe following precautions should be taken when administering remote access:\n*   Allow remote access to the network only for those users who need it to perform their duties (not standard for all users).\n*   Do not allow remote access clients to connect directly to the internal network. Allow remote access clients to connect to a DMZ and then monitor the traffic.\n*   Restrict remote access only to authorized clients. You can filter by IP address.\nAccount lockout disables a user account after a specified number of incorrect login attempts. Account lockout policies include:\n*   Account lockout duration\n    *   Specifies the number of minutes a locked-out account remains locked out before automatically becoming unlocked. When set to 0, an administrator must unlock the account.\n*   Account lockout threshold\n    *   Specifies the number of failed logon attempts that causes a user account to be locked out.\n*   Reset account lockout counter after\n    *   Specifies the number of minutes that must elapse after a failed logon attempt before the failed logon attempt counter is reset to 0 bad logon attempts. For example, if this value is set to 60 minutes and the account lockout threshold is set to 5, the user can enter up to four incorrect passwords within one hour without the account being locked.\nAccount lockout can be used to prevent attackers from guessing passwords, but it can also be used maliciously to lock an account and prevent a valid user from logging in\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "E_7WcmFGqLlxz2oc70-Fy",
        "term": "Hardening Best Practices",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n**Goal:** Prevent easy to guess passwords\n**Complexity Requirements:**\n*   Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters\n\n*   Must be at least six characters in length\n\n*   Must contain characters from three of the following four categories:\n\n    *   English uppercase characters (A through Z)\n    *   English lowercase characters (a through z)\n    *   Base-10 digits (0 through 9)\n    *   Non-alphabetic characters (for example, !, $, #, or %)\n\n*   Complexity requirements are enforced when passwords are changed or created.\nUsing more than one method to authenticate users. End users can be authenticated using four types of factors:\n*   Something you know\n*   Something you have\n*   Something you are\n*   Something you do\nWhen possible multifactor authentication should be used\nPlaces restrictions on user logins. For example, you can:\n*   Prohibit multiple concurrent logins\n*   Restrict logins to specific day/time\n*   Allow logins only from specific computers\n*   Create expiration dates for user accounts\nAccount monitoring can help you detect unusual or risky behavior. You should monitor for the following:\n*   Login activity.\n*   Suspicious logins for the user (spikes, logins at unusual time of day, and/or frequent or failed logins).\n*   Remote-access traffic.\nThe following list provides best practices for account maintenance:\n*   Delete an employee's account when the employee leaves the organization.\n*   Disable inactive accounts.\n*   Use automatic account expiration when applicable.\n*   Restrict remote access only to authorized clients (filtering by IP address).\n*   Limited remote access\n*   Connected through dmz\n*   Restrict IP addresses\n*   Limit concurrent logins\n*   Audit remote logins\nThe following precautions should be taken when administering remote access:\n*   Allow remote access to the network only for those users who need it to perform their duties (not standard for all users).\n*   Do not allow remote access clients to connect directly to the internal network. Allow remote access clients to connect to a DMZ and then monitor the traffic.\n*   Restrict remote access only to authorized clients. You can filter by IP address.\nAccount lockout disables a user account after a specified number of incorrect login attempts. Account lockout policies include:\n*   Account lockout duration\n    *   Specifies the number of minutes a locked-out account remains locked out before automatically becoming unlocked. When set to 0, an administrator must unlock the account.\n*   Account lockout threshold\n    *   Specifies the number of failed logon attempts that causes a user account to be locked out.\n*   Reset account lockout counter after\n    *   Specifies the number of minutes that must elapse after a failed logon attempt before the failed logon attempt counter is reset to 0 bad logon attempts. For example, if this value is set to 60 minutes and the account lockout threshold is set to 5, the user can enter up to four incorrect passwords within one hour without the account being locked.\nAccount lockout can be used to prevent attackers from guessing passwords, but it can also be used maliciously to lock an account and prevent a valid user from logging in\nWhen controlling user account and password security, be aware of the following:\n*   For large environments, implement a password management system with a self-service password reset management system.\n\n*   Implement account auditing to track incorrect login attempts.\n\n*   Scan systems to identify unused user accounts or accounts with blank passwords.\n\n*   Disable and/or remove default accounts.\n\n*   Prohibit the use of generic user accounts.\n\n*   Prohibit the use of shared user accounts.\n\n    Shared accounts:\n\n    *   Increase attack vectors.\n    *   Make password management more difficult.\n    *   Reduce responsibility for the account.\n    *   Destroy audit trails for the account.\n    *   Make it difficult to monitor the account for unusual activity.\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "BQJN5LmaYkI23gBw7PIm8",
        "term": "Smart Cards",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n**Goal:** Prevent easy to guess passwords\n**Complexity Requirements:**\n*   Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters\n\n*   Must be at least six characters in length\n\n*   Must contain characters from three of the following four categories:\n\n    *   English uppercase characters (A through Z)\n    *   English lowercase characters (a through z)\n    *   Base-10 digits (0 through 9)\n    *   Non-alphabetic characters (for example, !, $, #, or %)\n\n*   Complexity requirements are enforced when passwords are changed or created.\nUsing more than one method to authenticate users. End users can be authenticated using four types of factors:\n*   Something you know\n*   Something you have\n*   Something you are\n*   Something you do\nWhen possible multifactor authentication should be used\nPlaces restrictions on user logins. For example, you can:\n*   Prohibit multiple concurrent logins\n*   Restrict logins to specific day/time\n*   Allow logins only from specific computers\n*   Create expiration dates for user accounts\nAccount monitoring can help you detect unusual or risky behavior. You should monitor for the following:\n*   Login activity.\n*   Suspicious logins for the user (spikes, logins at unusual time of day, and/or frequent or failed logins).\n*   Remote-access traffic.\nThe following list provides best practices for account maintenance:\n*   Delete an employee's account when the employee leaves the organization.\n*   Disable inactive accounts.\n*   Use automatic account expiration when applicable.\n*   Restrict remote access only to authorized clients (filtering by IP address).\n*   Limited remote access\n*   Connected through dmz\n*   Restrict IP addresses\n*   Limit concurrent logins\n*   Audit remote logins\nThe following precautions should be taken when administering remote access:\n*   Allow remote access to the network only for those users who need it to perform their duties (not standard for all users).\n*   Do not allow remote access clients to connect directly to the internal network. Allow remote access clients to connect to a DMZ and then monitor the traffic.\n*   Restrict remote access only to authorized clients. You can filter by IP address.\nAccount lockout disables a user account after a specified number of incorrect login attempts. Account lockout policies include:\n*   Account lockout duration\n    *   Specifies the number of minutes a locked-out account remains locked out before automatically becoming unlocked. When set to 0, an administrator must unlock the account.\n*   Account lockout threshold\n    *   Specifies the number of failed logon attempts that causes a user account to be locked out.\n*   Reset account lockout counter after\n    *   Specifies the number of minutes that must elapse after a failed logon attempt before the failed logon attempt counter is reset to 0 bad logon attempts. For example, if this value is set to 60 minutes and the account lockout threshold is set to 5, the user can enter up to four incorrect passwords within one hour without the account being locked.\nAccount lockout can be used to prevent attackers from guessing passwords, but it can also be used maliciously to lock an account and prevent a valid user from logging in\nWhen controlling user account and password security, be aware of the following:\n*   For large environments, implement a password management system with a self-service password reset management system.\n\n*   Implement account auditing to track incorrect login attempts.\n\n*   Scan systems to identify unused user accounts or accounts with blank passwords.\n\n*   Disable and/or remove default accounts.\n\n*   Prohibit the use of generic user accounts.\n\n*   Prohibit the use of shared user accounts.\n\n    Shared accounts:\n\n    *   Increase attack vectors.\n    *   Make password management more difficult.\n    *   Reduce responsibility for the account.\n    *   Destroy audit trails for the account.\n    *   Make it difficult to monitor the account for unusual activity.\nSmart cards are plastic cards similar to credit cards that have an embedded memory chip that contains encrypted authentication information.\n*   Can be divided into two categories:\n    *   Contact smart cards (Gold Plated Contact)\n    *   Contactless smart cards (RFID)\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "NQk1fumIMkdtGCaxBnIPG",
        "term": "Smart Card Benefits",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n**Goal:** Prevent easy to guess passwords\n**Complexity Requirements:**\n*   Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters\n\n*   Must be at least six characters in length\n\n*   Must contain characters from three of the following four categories:\n\n    *   English uppercase characters (A through Z)\n    *   English lowercase characters (a through z)\n    *   Base-10 digits (0 through 9)\n    *   Non-alphabetic characters (for example, !, $, #, or %)\n\n*   Complexity requirements are enforced when passwords are changed or created.\nUsing more than one method to authenticate users. End users can be authenticated using four types of factors:\n*   Something you know\n*   Something you have\n*   Something you are\n*   Something you do\nWhen possible multifactor authentication should be used\nPlaces restrictions on user logins. For example, you can:\n*   Prohibit multiple concurrent logins\n*   Restrict logins to specific day/time\n*   Allow logins only from specific computers\n*   Create expiration dates for user accounts\nAccount monitoring can help you detect unusual or risky behavior. You should monitor for the following:\n*   Login activity.\n*   Suspicious logins for the user (spikes, logins at unusual time of day, and/or frequent or failed logins).\n*   Remote-access traffic.\nThe following list provides best practices for account maintenance:\n*   Delete an employee's account when the employee leaves the organization.\n*   Disable inactive accounts.\n*   Use automatic account expiration when applicable.\n*   Restrict remote access only to authorized clients (filtering by IP address).\n*   Limited remote access\n*   Connected through dmz\n*   Restrict IP addresses\n*   Limit concurrent logins\n*   Audit remote logins\nThe following precautions should be taken when administering remote access:\n*   Allow remote access to the network only for those users who need it to perform their duties (not standard for all users).\n*   Do not allow remote access clients to connect directly to the internal network. Allow remote access clients to connect to a DMZ and then monitor the traffic.\n*   Restrict remote access only to authorized clients. You can filter by IP address.\nAccount lockout disables a user account after a specified number of incorrect login attempts. Account lockout policies include:\n*   Account lockout duration\n    *   Specifies the number of minutes a locked-out account remains locked out before automatically becoming unlocked. When set to 0, an administrator must unlock the account.\n*   Account lockout threshold\n    *   Specifies the number of failed logon attempts that causes a user account to be locked out.\n*   Reset account lockout counter after\n    *   Specifies the number of minutes that must elapse after a failed logon attempt before the failed logon attempt counter is reset to 0 bad logon attempts. For example, if this value is set to 60 minutes and the account lockout threshold is set to 5, the user can enter up to four incorrect passwords within one hour without the account being locked.\nAccount lockout can be used to prevent attackers from guessing passwords, but it can also be used maliciously to lock an account and prevent a valid user from logging in\nWhen controlling user account and password security, be aware of the following:\n*   For large environments, implement a password management system with a self-service password reset management system.\n\n*   Implement account auditing to track incorrect login attempts.\n\n*   Scan systems to identify unused user accounts or accounts with blank passwords.\n\n*   Disable and/or remove default accounts.\n\n*   Prohibit the use of generic user accounts.\n\n*   Prohibit the use of shared user accounts.\n\n    Shared accounts:\n\n    *   Increase attack vectors.\n    *   Make password management more difficult.\n    *   Reduce responsibility for the account.\n    *   Destroy audit trails for the account.\n    *   Make it difficult to monitor the account for unusual activity.\nSmart cards are plastic cards similar to credit cards that have an embedded memory chip that contains encrypted authentication information.\n*   Can be divided into two categories:\n    *   Contact smart cards (Gold Plated Contact)\n    *   Contactless smart cards (RFID)\nKey benefits of smart cards include the following:\n*   They provide tamper-resistant storage for a user's private key and other personally identifying information (PII).\n*   They isolate security-related operations from the rest of the system.\n*   They allow security credentials to be portable.\n"
      },
      {
        "deckId": "6kOlVubRhaovjOvbbvYa6",
        "id": "jBez8CRTsBFanW9EPc3_o",
        "term": "Smart Card Weaknesses",
        "definition": "Using more than one method to authenticate users.\nSimilar in appearance to credit cards, smart cards have an embedded memory chip that contains encrypted authentication information. These cards are used for authentication.\nThe process of accessing a smart cards chip surface directly to observe, manipulate, and interfere with the circuit.\nThe wireless, non-contact use of radio frequency waves to transfer data.\nUser education is a large part of hardening authentication\n*   Don't share access\n*   Don't write passwords down\n*   Create memorable passwords\n*   Understand Social Engineering\n*   Password Aging\n*   Password History\n*   Password Complexity\n*   Password Management\nDisables users from using a specified number of previous passwords when creating a new one\n*   Maximum password age\n    *   Requires user to change password when maximum age is reached\n*   Minimum password age\n    *   Stops user from changing password until the minimum password age is reached\n**Goal:** Prevent easy to guess passwords\n**Complexity Requirements:**\n*   Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters\n\n*   Must be at least six characters in length\n\n*   Must contain characters from three of the following four categories:\n\n    *   English uppercase characters (A through Z)\n    *   English lowercase characters (a through z)\n    *   Base-10 digits (0 through 9)\n    *   Non-alphabetic characters (for example, !, $, #, or %)\n\n*   Complexity requirements are enforced when passwords are changed or created.\nUsing more than one method to authenticate users. End users can be authenticated using four types of factors:\n*   Something you know\n*   Something you have\n*   Something you are\n*   Something you do\nWhen possible multifactor authentication should be used\nPlaces restrictions on user logins. For example, you can:\n*   Prohibit multiple concurrent logins\n*   Restrict logins to specific day/time\n*   Allow logins only from specific computers\n*   Create expiration dates for user accounts\nAccount monitoring can help you detect unusual or risky behavior. You should monitor for the following:\n*   Login activity.\n*   Suspicious logins for the user (spikes, logins at unusual time of day, and/or frequent or failed logins).\n*   Remote-access traffic.\nThe following list provides best practices for account maintenance:\n*   Delete an employee's account when the employee leaves the organization.\n*   Disable inactive accounts.\n*   Use automatic account expiration when applicable.\n*   Restrict remote access only to authorized clients (filtering by IP address).\n*   Limited remote access\n*   Connected through dmz\n*   Restrict IP addresses\n*   Limit concurrent logins\n*   Audit remote logins\nThe following precautions should be taken when administering remote access:\n*   Allow remote access to the network only for those users who need it to perform their duties (not standard for all users).\n*   Do not allow remote access clients to connect directly to the internal network. Allow remote access clients to connect to a DMZ and then monitor the traffic.\n*   Restrict remote access only to authorized clients. You can filter by IP address.\nAccount lockout disables a user account after a specified number of incorrect login attempts. Account lockout policies include:\n*   Account lockout duration\n    *   Specifies the number of minutes a locked-out account remains locked out before automatically becoming unlocked. When set to 0, an administrator must unlock the account.\n*   Account lockout threshold\n    *   Specifies the number of failed logon attempts that causes a user account to be locked out.\n*   Reset account lockout counter after\n    *   Specifies the number of minutes that must elapse after a failed logon attempt before the failed logon attempt counter is reset to 0 bad logon attempts. For example, if this value is set to 60 minutes and the account lockout threshold is set to 5, the user can enter up to four incorrect passwords within one hour without the account being locked.\nAccount lockout can be used to prevent attackers from guessing passwords, but it can also be used maliciously to lock an account and prevent a valid user from logging in\nWhen controlling user account and password security, be aware of the following:\n*   For large environments, implement a password management system with a self-service password reset management system.\n\n*   Implement account auditing to track incorrect login attempts.\n\n*   Scan systems to identify unused user accounts or accounts with blank passwords.\n\n*   Disable and/or remove default accounts.\n\n*   Prohibit the use of generic user accounts.\n\n*   Prohibit the use of shared user accounts.\n\n    Shared accounts:\n\n    *   Increase attack vectors.\n    *   Make password management more difficult.\n    *   Reduce responsibility for the account.\n    *   Destroy audit trails for the account.\n    *   Make it difficult to monitor the account for unusual activity.\nSmart cards are plastic cards similar to credit cards that have an embedded memory chip that contains encrypted authentication information.\n*   Can be divided into two categories:\n    *   Contact smart cards (Gold Plated Contact)\n    *   Contactless smart cards (RFID)\nKey benefits of smart cards include the following:\n*   They provide tamper-resistant storage for a user's private key and other personally identifying information (PII).\n*   They isolate security-related operations from the rest of the system.\n*   They allow security credentials to be portable.\nSmart cards are subject to the following weaknesses:\n*   Microprobing\n    *   This is the process of accessing the chip surface directly to observe, manipulate, and interfere with the circuit.\n*   Software attacks\n    *   These exploit vulnerabilities in the card's protocols or encryption methods.\n*   Eavesdropping\n    *   This captures transmission data produced by the card as it is used.\n*   Fault generation\n    *   This deliberately induces malfunctions in the card.\n"
      }
    ]
  },
  {
    "info": {
      "id": "ZAlYOD-eiytj4DQqg5j4d",
      "title": "Cryptography",
      "section": "7.1",
      "date": "02-24-21"
    },
    "cards": [
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "Kn2lSwrgiS3FV4t0NpeEj",
        "term": "Cryptography",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "_Bxd1mY8LTICmDxxMZChF",
        "term": "Encryption",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "F3yagqZDKj9SCBToAlqSq",
        "term": "Cipher",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "TXwsvB9c5JMTN68ucMCTo",
        "term": "Encryption Keys",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "avgyt-UAEbxuzVyYXbCaW",
        "term": "Symmetric Keys",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "0gUaH709GB6jRcqhv_KRn",
        "term": "Asymmetric Keys",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "d95rkDIngZaz75gKpckeI",
        "term": "Hybrid Cryptosystems",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "1j_ROpcogc2G0g7pI-0oX",
        "term": "Ephemeral Keys",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "V3pkYfg8n-CNBsLaOnMRJ",
        "term": "Hashing",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "wvoLXGeWTKS_XM30_iKWh",
        "term": "Elliptic Curve Cryptology (ECC)",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "5XI-knvg_ae-j0QOBXZYR",
        "term": "Perfect Forward Secrecy",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "iXPXTXTgfB0bqOOsLgJTD",
        "term": "Stegonagraphy",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "N6JA6msGBoIEKJBuiPEWy",
        "term": "Stream Cipher",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\nEncrypts data one bit at a time.\n| Cipher Type   | Description                                                                                                                                                                                                                                                                                                                                                            |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Stream Cipher | Uses fixed length seed key such as 2048 bits<br />1. Creates a **keystream** by running key through a psuedorandom number generator<br />2. The **keystream** is XORed with the data to create the ciphertext<br />3. The seed key can be used repeatedly throughout the encryption process<br />Are less secure than one-time pad (OTP) but can be used in real-time. |\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "GG13QJREGptFS-nQOEWk6",
        "term": "Block Cipher",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\nEncrypts data one bit at a time.\n| Cipher Type   | Description                                                                                                                                                                                                                                                                                                                                                            |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Stream Cipher | Uses fixed length seed key such as 2048 bits<br />1. Creates a **keystream** by running key through a psuedorandom number generator<br />2. The **keystream** is XORed with the data to create the ciphertext<br />3. The seed key can be used repeatedly throughout the encryption process<br />Are less secure than one-time pad (OTP) but can be used in real-time. |\nEncrypt data a chunk at a time.\n| Operation Mode              | Description                                                                                                                                                                                         |\n| --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Electronic Code Book (ECB)  | ECB is the simplest mode of operation<br />- Each block of plaintext data is encrypted separately                                                                                                   |\n| Cipher Block Chaining (CBC) | CBC is similar to ECB expect this mode uses an initialization vector (IV)                                                                                                                           |\n| Cipher Feedback Mode (CFB)  | Uses an IV, but encrypts the IV first instead of using plain text. The output is XORed with the plaintext to create the block of ciphertext                                                         |\n| Output Feedback Mode (OFB)  | This mode is identical to CFB but the IV is used after the first round                                                                                                                              |\n| Counter Mode (CTR)          | Instead of using an initialization vector, CTR uses a nonce comined witha counter that is encrypted<br />- A **nonce** is a random string that is used for all blocks during the encryption process |\n| Galois Counter Mode (GCM)   | GCM provides both encryption and authentication                                                                                                                                                     |\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "4q5qLkdJV1uNSBSedRqN1",
        "term": "Blockchain",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\nEncrypts data one bit at a time.\n| Cipher Type   | Description                                                                                                                                                                                                                                                                                                                                                            |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Stream Cipher | Uses fixed length seed key such as 2048 bits<br />1. Creates a **keystream** by running key through a psuedorandom number generator<br />2. The **keystream** is XORed with the data to create the ciphertext<br />3. The seed key can be used repeatedly throughout the encryption process<br />Are less secure than one-time pad (OTP) but can be used in real-time. |\nEncrypt data a chunk at a time.\n| Operation Mode              | Description                                                                                                                                                                                         |\n| --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Electronic Code Book (ECB)  | ECB is the simplest mode of operation<br />- Each block of plaintext data is encrypted separately                                                                                                   |\n| Cipher Block Chaining (CBC) | CBC is similar to ECB expect this mode uses an initialization vector (IV)                                                                                                                           |\n| Cipher Feedback Mode (CFB)  | Uses an IV, but encrypts the IV first instead of using plain text. The output is XORed with the plaintext to create the block of ciphertext                                                         |\n| Output Feedback Mode (OFB)  | This mode is identical to CFB but the IV is used after the first round                                                                                                                              |\n| Counter Mode (CTR)          | Instead of using an initialization vector, CTR uses a nonce comined witha counter that is encrypted<br />- A **nonce** is a random string that is used for all blocks during the encryption process |\n| Galois Counter Mode (GCM)   | GCM provides both encryption and authentication                                                                                                                                                     |\nA decentralized and distributed ledger that records and verifies transactions between two parties.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "PXdKwOZvv8WWgmDVGgncz",
        "term": "Blockchain Blocks",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\nEncrypts data one bit at a time.\n| Cipher Type   | Description                                                                                                                                                                                                                                                                                                                                                            |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Stream Cipher | Uses fixed length seed key such as 2048 bits<br />1. Creates a **keystream** by running key through a psuedorandom number generator<br />2. The **keystream** is XORed with the data to create the ciphertext<br />3. The seed key can be used repeatedly throughout the encryption process<br />Are less secure than one-time pad (OTP) but can be used in real-time. |\nEncrypt data a chunk at a time.\n| Operation Mode              | Description                                                                                                                                                                                         |\n| --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Electronic Code Book (ECB)  | ECB is the simplest mode of operation<br />- Each block of plaintext data is encrypted separately                                                                                                   |\n| Cipher Block Chaining (CBC) | CBC is similar to ECB expect this mode uses an initialization vector (IV)                                                                                                                           |\n| Cipher Feedback Mode (CFB)  | Uses an IV, but encrypts the IV first instead of using plain text. The output is XORed with the plaintext to create the block of ciphertext                                                         |\n| Output Feedback Mode (OFB)  | This mode is identical to CFB but the IV is used after the first round                                                                                                                              |\n| Counter Mode (CTR)          | Instead of using an initialization vector, CTR uses a nonce comined witha counter that is encrypted<br />- A **nonce** is a random string that is used for all blocks during the encryption process |\n| Galois Counter Mode (GCM)   | GCM provides both encryption and authentication                                                                                                                                                     |\nA decentralized and distributed ledger that records and verifies transactions between two parties.\nEach block is a transaction that is stored publicly on the chain. The block contains information such as:\n*   Time\n*   Date\n*   Parties Involved\n*   A unique hash that separates the block from other blocks on the chain\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "0HNbcU8la9_qilD5FHAUs",
        "term": "Blockchain Nodes",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\nEncrypts data one bit at a time.\n| Cipher Type   | Description                                                                                                                                                                                                                                                                                                                                                            |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Stream Cipher | Uses fixed length seed key such as 2048 bits<br />1. Creates a **keystream** by running key through a psuedorandom number generator<br />2. The **keystream** is XORed with the data to create the ciphertext<br />3. The seed key can be used repeatedly throughout the encryption process<br />Are less secure than one-time pad (OTP) but can be used in real-time. |\nEncrypt data a chunk at a time.\n| Operation Mode              | Description                                                                                                                                                                                         |\n| --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Electronic Code Book (ECB)  | ECB is the simplest mode of operation<br />- Each block of plaintext data is encrypted separately                                                                                                   |\n| Cipher Block Chaining (CBC) | CBC is similar to ECB expect this mode uses an initialization vector (IV)                                                                                                                           |\n| Cipher Feedback Mode (CFB)  | Uses an IV, but encrypts the IV first instead of using plain text. The output is XORed with the plaintext to create the block of ciphertext                                                         |\n| Output Feedback Mode (OFB)  | This mode is identical to CFB but the IV is used after the first round                                                                                                                              |\n| Counter Mode (CTR)          | Instead of using an initialization vector, CTR uses a nonce comined witha counter that is encrypted<br />- A **nonce** is a random string that is used for all blocks during the encryption process |\n| Galois Counter Mode (GCM)   | GCM provides both encryption and authentication                                                                                                                                                     |\nA decentralized and distributed ledger that records and verifies transactions between two parties.\nEach block is a transaction that is stored publicly on the chain. The block contains information such as:\n*   Time\n*   Date\n*   Parties Involved\n*   A unique hash that separates the block from other blocks on the chain\nEach node of the blockchain plays a role in verifying and recording transactions. In order for a new node to join the blockchain must be copied to that node.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "rAy3OT3r6ebUK_VYJhb63",
        "term": "Blockchain Mining",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\nEncrypts data one bit at a time.\n| Cipher Type   | Description                                                                                                                                                                                                                                                                                                                                                            |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Stream Cipher | Uses fixed length seed key such as 2048 bits<br />1. Creates a **keystream** by running key through a psuedorandom number generator<br />2. The **keystream** is XORed with the data to create the ciphertext<br />3. The seed key can be used repeatedly throughout the encryption process<br />Are less secure than one-time pad (OTP) but can be used in real-time. |\nEncrypt data a chunk at a time.\n| Operation Mode              | Description                                                                                                                                                                                         |\n| --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Electronic Code Book (ECB)  | ECB is the simplest mode of operation<br />- Each block of plaintext data is encrypted separately                                                                                                   |\n| Cipher Block Chaining (CBC) | CBC is similar to ECB expect this mode uses an initialization vector (IV)                                                                                                                           |\n| Cipher Feedback Mode (CFB)  | Uses an IV, but encrypts the IV first instead of using plain text. The output is XORed with the plaintext to create the block of ciphertext                                                         |\n| Output Feedback Mode (OFB)  | This mode is identical to CFB but the IV is used after the first round                                                                                                                              |\n| Counter Mode (CTR)          | Instead of using an initialization vector, CTR uses a nonce comined witha counter that is encrypted<br />- A **nonce** is a random string that is used for all blocks during the encryption process |\n| Galois Counter Mode (GCM)   | GCM provides both encryption and authentication                                                                                                                                                     |\nA decentralized and distributed ledger that records and verifies transactions between two parties.\nEach block is a transaction that is stored publicly on the chain. The block contains information such as:\n*   Time\n*   Date\n*   Parties Involved\n*   A unique hash that separates the block from other blocks on the chain\nEach node of the blockchain plays a role in verifying and recording transactions. In order for a new node to join the blockchain must be copied to that node.\nThe process of adding blocks to the chain that requires miners (nodes) to compute extremely complex math problems. Mining nodes are paid for their work in a cryptocurrency like Bitcoin.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "0mCVfE2e_uyJifl4OsPsI",
        "term": "Blockchain Privacy",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\nEncrypts data one bit at a time.\n| Cipher Type   | Description                                                                                                                                                                                                                                                                                                                                                            |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Stream Cipher | Uses fixed length seed key such as 2048 bits<br />1. Creates a **keystream** by running key through a psuedorandom number generator<br />2. The **keystream** is XORed with the data to create the ciphertext<br />3. The seed key can be used repeatedly throughout the encryption process<br />Are less secure than one-time pad (OTP) but can be used in real-time. |\nEncrypt data a chunk at a time.\n| Operation Mode              | Description                                                                                                                                                                                         |\n| --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Electronic Code Book (ECB)  | ECB is the simplest mode of operation<br />- Each block of plaintext data is encrypted separately                                                                                                   |\n| Cipher Block Chaining (CBC) | CBC is similar to ECB expect this mode uses an initialization vector (IV)                                                                                                                           |\n| Cipher Feedback Mode (CFB)  | Uses an IV, but encrypts the IV first instead of using plain text. The output is XORed with the plaintext to create the block of ciphertext                                                         |\n| Output Feedback Mode (OFB)  | This mode is identical to CFB but the IV is used after the first round                                                                                                                              |\n| Counter Mode (CTR)          | Instead of using an initialization vector, CTR uses a nonce comined witha counter that is encrypted<br />- A **nonce** is a random string that is used for all blocks during the encryption process |\n| Galois Counter Mode (GCM)   | GCM provides both encryption and authentication                                                                                                                                                     |\nA decentralized and distributed ledger that records and verifies transactions between two parties.\nEach block is a transaction that is stored publicly on the chain. The block contains information such as:\n*   Time\n*   Date\n*   Parties Involved\n*   A unique hash that separates the block from other blocks on the chain\nEach node of the blockchain plays a role in verifying and recording transactions. In order for a new node to join the blockchain must be copied to that node.\nThe process of adding blocks to the chain that requires miners (nodes) to compute extremely complex math problems. Mining nodes are paid for their work in a cryptocurrency like Bitcoin.\nAlthough all transactions are publicly visible, all personal information on the ledger is hidden from everyone through encryption.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "33YCcZa_YWQvg8krqt5eW",
        "term": "Dictionary Attack",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\nEncrypts data one bit at a time.\n| Cipher Type   | Description                                                                                                                                                                                                                                                                                                                                                            |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Stream Cipher | Uses fixed length seed key such as 2048 bits<br />1. Creates a **keystream** by running key through a psuedorandom number generator<br />2. The **keystream** is XORed with the data to create the ciphertext<br />3. The seed key can be used repeatedly throughout the encryption process<br />Are less secure than one-time pad (OTP) but can be used in real-time. |\nEncrypt data a chunk at a time.\n| Operation Mode              | Description                                                                                                                                                                                         |\n| --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Electronic Code Book (ECB)  | ECB is the simplest mode of operation<br />- Each block of plaintext data is encrypted separately                                                                                                   |\n| Cipher Block Chaining (CBC) | CBC is similar to ECB expect this mode uses an initialization vector (IV)                                                                                                                           |\n| Cipher Feedback Mode (CFB)  | Uses an IV, but encrypts the IV first instead of using plain text. The output is XORed with the plaintext to create the block of ciphertext                                                         |\n| Output Feedback Mode (OFB)  | This mode is identical to CFB but the IV is used after the first round                                                                                                                              |\n| Counter Mode (CTR)          | Instead of using an initialization vector, CTR uses a nonce comined witha counter that is encrypted<br />- A **nonce** is a random string that is used for all blocks during the encryption process |\n| Galois Counter Mode (GCM)   | GCM provides both encryption and authentication                                                                                                                                                     |\nA decentralized and distributed ledger that records and verifies transactions between two parties.\nEach block is a transaction that is stored publicly on the chain. The block contains information such as:\n*   Time\n*   Date\n*   Parties Involved\n*   A unique hash that separates the block from other blocks on the chain\nEach node of the blockchain plays a role in verifying and recording transactions. In order for a new node to join the blockchain must be copied to that node.\nThe process of adding blocks to the chain that requires miners (nodes) to compute extremely complex math problems. Mining nodes are paid for their work in a cryptocurrency like Bitcoin.\nAlthough all transactions are publicly visible, all personal information on the ledger is hidden from everyone through encryption.\nType of brute force attack where a hacker uses a list of words or phrases to try and guess the decryption key\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "Ef1NRKIdmbpOqvC_Nj71p",
        "term": "Collision Attack",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\nEncrypts data one bit at a time.\n| Cipher Type   | Description                                                                                                                                                                                                                                                                                                                                                            |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Stream Cipher | Uses fixed length seed key such as 2048 bits<br />1. Creates a **keystream** by running key through a psuedorandom number generator<br />2. The **keystream** is XORed with the data to create the ciphertext<br />3. The seed key can be used repeatedly throughout the encryption process<br />Are less secure than one-time pad (OTP) but can be used in real-time. |\nEncrypt data a chunk at a time.\n| Operation Mode              | Description                                                                                                                                                                                         |\n| --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Electronic Code Book (ECB)  | ECB is the simplest mode of operation<br />- Each block of plaintext data is encrypted separately                                                                                                   |\n| Cipher Block Chaining (CBC) | CBC is similar to ECB expect this mode uses an initialization vector (IV)                                                                                                                           |\n| Cipher Feedback Mode (CFB)  | Uses an IV, but encrypts the IV first instead of using plain text. The output is XORed with the plaintext to create the block of ciphertext                                                         |\n| Output Feedback Mode (OFB)  | This mode is identical to CFB but the IV is used after the first round                                                                                                                              |\n| Counter Mode (CTR)          | Instead of using an initialization vector, CTR uses a nonce comined witha counter that is encrypted<br />- A **nonce** is a random string that is used for all blocks during the encryption process |\n| Galois Counter Mode (GCM)   | GCM provides both encryption and authentication                                                                                                                                                     |\nA decentralized and distributed ledger that records and verifies transactions between two parties.\nEach block is a transaction that is stored publicly on the chain. The block contains information such as:\n*   Time\n*   Date\n*   Parties Involved\n*   A unique hash that separates the block from other blocks on the chain\nEach node of the blockchain plays a role in verifying and recording transactions. In order for a new node to join the blockchain must be copied to that node.\nThe process of adding blocks to the chain that requires miners (nodes) to compute extremely complex math problems. Mining nodes are paid for their work in a cryptocurrency like Bitcoin.\nAlthough all transactions are publicly visible, all personal information on the ledger is hidden from everyone through encryption.\nType of brute force attack where a hacker uses a list of words or phrases to try and guess the decryption key\nTries to find two inputs that produce the same hash value. Commonly used against digital signatures.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "Hc1kS1OdXhLJiG3dyaUEC",
        "term": "Birthday Attack",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\nEncrypts data one bit at a time.\n| Cipher Type   | Description                                                                                                                                                                                                                                                                                                                                                            |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Stream Cipher | Uses fixed length seed key such as 2048 bits<br />1. Creates a **keystream** by running key through a psuedorandom number generator<br />2. The **keystream** is XORed with the data to create the ciphertext<br />3. The seed key can be used repeatedly throughout the encryption process<br />Are less secure than one-time pad (OTP) but can be used in real-time. |\nEncrypt data a chunk at a time.\n| Operation Mode              | Description                                                                                                                                                                                         |\n| --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Electronic Code Book (ECB)  | ECB is the simplest mode of operation<br />- Each block of plaintext data is encrypted separately                                                                                                   |\n| Cipher Block Chaining (CBC) | CBC is similar to ECB expect this mode uses an initialization vector (IV)                                                                                                                           |\n| Cipher Feedback Mode (CFB)  | Uses an IV, but encrypts the IV first instead of using plain text. The output is XORed with the plaintext to create the block of ciphertext                                                         |\n| Output Feedback Mode (OFB)  | This mode is identical to CFB but the IV is used after the first round                                                                                                                              |\n| Counter Mode (CTR)          | Instead of using an initialization vector, CTR uses a nonce comined witha counter that is encrypted<br />- A **nonce** is a random string that is used for all blocks during the encryption process |\n| Galois Counter Mode (GCM)   | GCM provides both encryption and authentication                                                                                                                                                     |\nA decentralized and distributed ledger that records and verifies transactions between two parties.\nEach block is a transaction that is stored publicly on the chain. The block contains information such as:\n*   Time\n*   Date\n*   Parties Involved\n*   A unique hash that separates the block from other blocks on the chain\nEach node of the blockchain plays a role in verifying and recording transactions. In order for a new node to join the blockchain must be copied to that node.\nThe process of adding blocks to the chain that requires miners (nodes) to compute extremely complex math problems. Mining nodes are paid for their work in a cryptocurrency like Bitcoin.\nAlthough all transactions are publicly visible, all personal information on the ledger is hidden from everyone through encryption.\nType of brute force attack where a hacker uses a list of words or phrases to try and guess the decryption key\nTries to find two inputs that produce the same hash value. Commonly used against digital signatures.\nThis attack combines both collision and brute-force attacks. Name comes from the birthday probability math problem.\n"
      },
      {
        "deckId": "ZAlYOD-eiytj4DQqg5j4d",
        "id": "ZS3F0SuIXLTzY0dZbJwcH",
        "term": "Downgrade Attack",
        "definition": "Cryptography is defined as the process of writing or solving messages using a secret code. It is one additional layer of defense that can be used to protect data.\nTaking normal text encrypting to create ciphertext.\nCipher is a method, or algorithm used to encrypt or convert data.\n`ex. caesar shift cipher`\nRandom strings of bits used to lock and unlock data\nOne key is used to lock and unlock data. This is the simplest and oldes form of encryption.\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig1/AS:561500478808064@1510883554986/Symmetric-encryption-primitive.png\" alt=\"Symmetric Key Example\" style=\"zoom:67%;\" />\n##### Benefits\n*   Very secure when key is kept safe\n*   Useful when a large amount of data needs to be encrypted since it requires less computing power\n##### Drawbacks\n*   The key must be shared before a user can decrypt a message\n*   The integrity of the key is reduced as the key is shared with more people\n##### Common symmetric encryption\n*   Rivest Cipher\n*   Data Encryption Standard (DES)\n*   Advanced Encryption Standard (AES)\n*   Blowfish\n*   IDEA\n*   CAST\n*   Twofish\n##### Public/Private Keys\nUses two different keys to lock and unlock data that has been encrypted.\n*   User's public key encrypts data\n*   That user uses their private key to decrypt the data\n*   The private only decrypts data encrypted by its matching private key\n<img src=\"https://www.researchgate.net/profile/Ons_Jallouli/publication/321123382/figure/download/fig2/AS:561500483002368@1510883555030/Asymmetric-encryption-primitive.png\" alt=\"Asymmetric Keys\" style=\"zoom: 67%;\" />\nCombine the efficiency of symmetric encryption with the convenience of asymmetric encryption\n<h6><center>Hybrid Encryption</center></h6>\n![Hybrid Encryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-encryption.png)\n<h6><center>Hybrid Decryption</center></h6>\n![Hybrid Decryption](https://wizardforcel.gitbooks.io/practical-cryptography-for-developers-book/content/assets/hybrid-decryption.png)\nEvery message that is sent generates its own encryption key. In this way, an attacker cannot eavesdrop on an entire session.\nThe process of converting one value into another using an algorithm. Used on data that does not need to be decrypted.\n##### Characteristics\n*   Deterministic, meaning the same input produces the same output\n\n*   Cannot be decrypted\n\n*   Hashing algorithms come in many form `MD5`, `SHA-0`, `SHA-1`, `SHA-3`\n\n*   Salt\n    *   Adding a random number of data to hash to make hashed data harder to find\nNext generation of cryptography that produces smaller keys that are also more secure.\nMost common in messaging apps where each transmission is encrypted with a different unique key.\nMessage/Data hiding within other files of various types.\nEncrypts data one bit at a time.\n| Cipher Type   | Description                                                                                                                                                                                                                                                                                                                                                            |\n| ------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Stream Cipher | Uses fixed length seed key such as 2048 bits<br />1. Creates a **keystream** by running key through a psuedorandom number generator<br />2. The **keystream** is XORed with the data to create the ciphertext<br />3. The seed key can be used repeatedly throughout the encryption process<br />Are less secure than one-time pad (OTP) but can be used in real-time. |\nEncrypt data a chunk at a time.\n| Operation Mode              | Description                                                                                                                                                                                         |\n| --------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Electronic Code Book (ECB)  | ECB is the simplest mode of operation<br />- Each block of plaintext data is encrypted separately                                                                                                   |\n| Cipher Block Chaining (CBC) | CBC is similar to ECB expect this mode uses an initialization vector (IV)                                                                                                                           |\n| Cipher Feedback Mode (CFB)  | Uses an IV, but encrypts the IV first instead of using plain text. The output is XORed with the plaintext to create the block of ciphertext                                                         |\n| Output Feedback Mode (OFB)  | This mode is identical to CFB but the IV is used after the first round                                                                                                                              |\n| Counter Mode (CTR)          | Instead of using an initialization vector, CTR uses a nonce comined witha counter that is encrypted<br />- A **nonce** is a random string that is used for all blocks during the encryption process |\n| Galois Counter Mode (GCM)   | GCM provides both encryption and authentication                                                                                                                                                     |\nA decentralized and distributed ledger that records and verifies transactions between two parties.\nEach block is a transaction that is stored publicly on the chain. The block contains information such as:\n*   Time\n*   Date\n*   Parties Involved\n*   A unique hash that separates the block from other blocks on the chain\nEach node of the blockchain plays a role in verifying and recording transactions. In order for a new node to join the blockchain must be copied to that node.\nThe process of adding blocks to the chain that requires miners (nodes) to compute extremely complex math problems. Mining nodes are paid for their work in a cryptocurrency like Bitcoin.\nAlthough all transactions are publicly visible, all personal information on the ledger is hidden from everyone through encryption.\nType of brute force attack where a hacker uses a list of words or phrases to try and guess the decryption key\nTries to find two inputs that produce the same hash value. Commonly used against digital signatures.\nThis attack combines both collision and brute-force attacks. Name comes from the birthday probability math problem.\nAn attack that forces the system to use an older, less secure communication protocol.\n"
      }
    ]
  }
]
